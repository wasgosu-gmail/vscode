- 질문

1. 스프링부트에서 제공되는 내장WAS(톰켓, 언더토우, 네티, 제티)에 대해 알고 있으신지와 귀 사에서 제공하는 WAS와의 차이점.
2. 스프링부트에서 제공되는 내장WAS가 귀 사의 WAS를 완전히 대체할 수 있다고 생각하는지.
3. 스프링부트에서 제공하는 톰캣 내장 WAS처럼 귀사의 WAS를 내장WAS형태로 활용할 수 있는 방법이 있는지.
4. 오라클에서 제공하는 WAS에 마이크로 서비스 마다 인스턴스를 올릴 수 있는지와 올렸을 때 서버 가격정책이 어떤지.
5. 스프링부트에서 제공하는 WAS를 사용하여 개발 시 유지보수에서 발생되는 문제점이 있다고 생각하는지.
6. 기타 스프링부트에서 제공되는 WAS 대한 의견.




- 답변
1. 스프링부트에서 제공되는 내장WAS(톰켓, 언더토우, 네티, 제티)에 대해 알고 있으신지와 귀 사에서 제공하는 WAS와의 차이점.
- 스프링부트에서 제공되는 내장 웹서버와 Oracle 사의 weblogic 은 차이가 많습니다.
언급하신 tomcat, 언더토우등은 기본 제공되는 기능이 Servlet / JSP API으로 웹 컨테이너 이고, EJB등 추가 기능이 필요시 모듈을 별도 구성해야 하고 
오픈소스인 만큼 이슈대응이 빠를수 없습니다.
Oracle weblogic 은 Full Java EE and Jakarta EE implementation 입니다.
또한 유지보수 및 장애대응에 있어서 문제점 발생시 원인 파악 및 문제 해결에 있어 대응 가능한 인력이 없을시 안정적인 weblogic이 효율적입니다.


2. 스프링부트에서 제공되는 내장WAS가 귀 사의 WAS를 완전히 대체할 수 있다고 생각하는지.
- 가능합니다.
- 스프링부트에서 제공되는 내장was 의 기능은 모두 weblogic에서 구현가능합니다.
  weblogic의 웹 기반 관리자 콘솔은 JMS, 데이터 소스 및 보안 설정 등의 구성설정을 모두 지원하여 관리자 입장에서 서비스를 제어하고 관리하기에 최적화 되어있습니다.
                 

3. 스프링부트에서 제공하는 톰캣 내장 WAS처럼 귀사의 WAS를 내장WAS형태로 활용할 수 있는 방법이 있는지.
- springboot 내장WAS 형태가 아닌 별도 weblogic을 설치하여 연동해야 합니다
내장tomcat 과 별도 설치는 구현 방식 차이만 존재하지 기능상 큰 차이는 없으며, 사용자 환경과 개발의도에 맞는 미들웨어를 설치하여 구현하는 것이 중요합니다
weblogic 변경시 tomcat 에서 사용했던 설정의 일부(web.xml, weblogic.xml, application.yml)를 weblogic 에서 활용 할 수 있도록 변경하는 작업이 필요합니다. 


4. 오라클에서 제공하는 WAS에 마이크로 서비스 마다 인스턴스를 올릴 수 있는지와 올렸을 때 서버 가격정책이 어떤지.
- 가격 정책은 영업을 통해 지원해드릴 수 있습니다.
- 말씀하신 MAS (MicroService Architecture)에 대해 weblogic 에서 모두 구현 가능합니다.
Oracle WebLogic Server is a unified and extensible platform for developing, deploying and running enterprise applications, such as Java, for on-premises and in the cloud. WebLogic Server offers a robust, mature, and scalable implementation of Java Enterprise Edition (EE) and Jakarta EE.


5. 스프링부트에서 제공하는 WAS를 사용하여 개발 시 유지보수에서 발생되는 문제점이 있다고 생각하는지.
- 유지보수시 발생되는 문제로는 상용S/W와 오픈소스의 차이는 명확합니다.
- weblogic 을 구매하여 사용하시면 설치, 설정, 튜닝, 패치, 정기정검, 업그레이드가 전문인력을 통해 제공되는 반면, 
  오픈소스 미들웨어 사용시 위 내용은 제공되지 않으며, 시스템을 관리할 전문인력이 스스로 해결해야 합니다.
- 오픈소스로 구현시 구현자의 능력에 따라 성능차이가 상당히 발생합니다.
  해당 내용을 잘 모르는 사람이 운영하는 경우 최적화이슈, 튜닝잘못으로 서비스 전체 품질이 낮아지는 현상은 자주 발생되는 이슈입니다.


6. 기타 스프링부트에서 제공되는 WAS 대한 의견.
스프링부트에서 제공되는 내장 웹서버는 개발프래임웍을 편리하게 해주는 것은 맞지만, 사이트 관리 운영에는 적합하지 않습니다.
많은 기업에서 간소화 서비스 외에는 별도 WAS를 설치해서 운영하고 있습니다.
그 이유로 스프링부트로 개발시 라이브러리 의존성을 더욱 간단히 처리하기위해 내장 웹서버 Tomcat가 탑제된 스프링부트로 구현하지만, JAR파일이 아닌 웹프로젝트 WAS일 경우, MSA의 확장설을 고려하여 스프링프레임워크 + 미들웨어를 별도 구축하는 것이 운영 및 성능, 튜닝, 최적화, 이슈지원들에 적합하다 판단됩니다.



######## 스프링부트 진행할 것
1. 1차 답변
- 1장으로 스프링부트의 장표 필요 (ppt, 자료정리, 모음으로 필요)
  10장으로 정리
- 스프링부트의 실체, 개념, 아키텍처
- 스프링부트의 장점
- 오라클 방어가 아닌.. 스프링부트가 왜 좋은지 등.. 
- 기술적 검토가 이루어진 형태의 장표, 설명이 필요하다

- 스프링부트의 단점
- 오라클의 입장은 세일즈 메세지 필요

2. 우리의 대응 필요
그다음이 저희가 해야할 부분을 정의해야 할 것이다

3. 본인의 입장 까지 써주길 바란다.

4. 다음자리에서 발표하기
- 템플렛은 워드나 오라클 문서를 보면서 형식으로 진행


- 자동화 디플로이 메이븐.. 
스프링부트의 기본.. weblogic 과 적용이슈 있는지 확인필요

- 클라우드 자격증도 따야한다
IIS 자격증필요 할 것 같다





#################
spring  & spring boot 비교
- 쉽고, 단독적이고 상용화 수준이며 스프링 기반 
- spring 는 dependency 설정을 모두(버전정보까지) 해줘야 하는데, spring boot 는 심플해지고 간단해졌다.


######### 유원조부장님
Helidon 2.0
spring 에서 대응할 수 있는 헬리돈이란 것도 있다
weblogic 에서도 헬리돈이란 것을 만들었다
오픈소스로 출시했고 cloud 에서는 무료로 기술지원을 해준다.
oci 에서는 서포트를 받을수도 있다.
weblogic 안에도 라이센스가 포함되있다.



###########
https://www.youtube.com/watch?v=tnQVZfjESsg
유원조부장님 내용 참고 

1. weblogic 12c & oracle db 와 시너지가 있음
DB에 추가된 기능이 weblogic 에서 사용할 수 있다
기능 1개가 여러가지 효과를 보인다.

- Active GridLink for rac
자동연결, 자동 fail-over, 안전성이 뛰어나다
데이터베이스 RAC와 커넥션 하기 위한 단일 풀이다. 
RAC SCAN 을 통해 접속하고 단일 풀으로 접속
DB에서 설정 변경되도 weblogic에서 설정 변경할 필요 없이 지속적인 연결 가능
성능과 고가용성에서 이득이 있음


기존 멀티데이터 소스에서는 was -> db로 ping을 날려서 db의 cpu를 체크해야했지만, Active GridLink 를 사용하게되면 자동적으로 DB CPU 상태를 모니터링 하면서 cpu가 적은 쪽으로 부하를 보낸다. (80%, 20%)


2. 12c에서 추가된 기능 좋아진 것(4가지)

- jdbc replay 기능으로 DB 1개가 다운됐을때 현재 트랜젝션을 가지고 있다가 살아있는 서버로 replay한 뒤 ap에게 정상적인 호출을 보낸다

- Database Resident Connection Pooling
전통적인 was에서  jdbc pool을 관리하는 것이 아니라 db에서 jdbc pool을 관리한다, 그렇게 되면 was의 증설유무에 따른 jdbc pool 증가에 따른 메모리 이슈를 해결할 수 있다
효율성 면에서 많이 좋아졌다.
oracle db 12c에 이 기능이 출시되서 weblogic 12c에서 서로 활용 할 수 있도록 기능이 통합됐다

- Multi-Tenant Database
하나의 인스턴스에 datasource 1개를 이용해서 mdb를 여러개를 만들어서 사용할 수있게 되는 기능
사용자별로 mdb를 여러개 가지고 갈 수 있다. 
datasource 내에서 mdb를 여러가 가지고 갈 수 있으므로 별도 개발소스에서 분류할 필요가 없다
단일 데이터소스로 구성
풀 내의 커넥션들은 모든 태넌트 데이터베이스에 연결됨
단일 데이터소스를 구성(커넥션 자원 효율화)하고 동적으로 커넥션을 전환하여 원하는 태넌트 데이터베이스 커넥션을 얻도록 설정할 수 있습니다.


- Dynamic Cluster
템플릿을 사용하여 자동복제
AWS의 auto-scale랑 비슷하다. 몇개를 할 건지만 정해두면 그 안에서 인스턴스 증가되고 줄어들기도 한다.


(기타기능) 
- Coherence 관리
Coherence는 데이터그리드 개념과 캐시서버로 함게 사용가능하며 따로 별개로 관리안해도 되고 weblogic 콘솔안에서 관리할 수 있게됐다.

- html5 지원
기존 웹방식은 요청 <--> 응답하는 방식인데 서버에서 client로 데이터 전송을 못했다. 그래서 채팅서버등은 웹에서 구현을 할 수 없었다.

html5 서버에서 client 로의 데이터를 push 해주는 html5의 새로운 스펙인 websockets 지원
1 connection 으로 실시간 동시에 쌍방향 통신 가능
ex) 채팅, 게임, 주식차트등에 사용

- osgi 지원
jar 파일 한개단위로 클래스로더가 만들어 진다. 

- weblogic 진단모듈
자체 모니터링 진단모듈 탑제
mbean으로 수집한 데이터를 대시보드 chart 와 같은 동적 모니터링을 할 수 있다
Low, Medium, High 로 간략하게 구별해서 사용가능


3. 개발자 툴
oracle ADF (공통 프레임웍크, 개발툴, 모바일 멀티플랫폼 적용(ios, Android)
이클립스, netbeans, oracle jdeveloper, 
spring bean weblogic 콘솔에서 모니터링 상태 가능

- weblogic 버전 자동 업그레이드 툴을 제공


웹로직에서 멀티테넌시 기능을 활용하여 saas 활용 가능

























